#运行用户
#user  nobody;
#启动进程，通常设置成和CPU的核数相等
worker_processes  2;
#全局错误日志
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#PID文件，记录当前启动的nginx的进程ID
#pid        logs/nginx.pid; D:/Tools/nginx-1.10.1/logs/nginx.pid;
#工作模式及连接数上限
events {
    worker_connections  1024; #单个后台worker process进程的最大并发链接数
}
#设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
	#设定mime类型(邮件支持类型),类型由mime.types文件定义
    include       mime.types;
    default_type  application/octet-stream;
	#设定日志
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;
    rewrite_log  on;
	
	#sendfile 指令指定nginx是否调用sendfile 函数(zero copy 方式) 来输出文件，对于普通应用，
	#必须设为 on,如果用来进行下载等应用磁盘IO重负载，可设置为off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile        on;
    #tcp_nopush     on;
	
	#连接超时时间
    #keepalive_timeout  0;
    keepalive_timeout  65;
	#tcp_nodelay  on;
	
	#gzip压缩开关
    #gzip  on;
	
	#设定实际的服务器列表  static_tl  和下面的proxy_pass 对应
	#upstream static_tl{
		#server 127.0.0.1:8089
	#}

    #nginx反向代理配置说明
    #启动一个nginx web服务
    #当用户访问：http://10.1.26.25:98/santachi时就相当于访问http://10.1.2.98:88/santachi
	#HTTP服务器
	
	upstream server7_pool{
		server 127.0.0.1:8080	weight=10	max_fails=2	fail_timeout=30s;
	}

	server
	{
		#监听99端口
        listen       99;
		#定义使用访问
        server_name  server8.example.com;
		
		#首页
		#index index.html;
		
		#指向webapp的目录
		#root D:\01_Workspace\Project\github\zp\SpringNotes\spring-security\spring-shiro\src\main\webapp;
		#编码格式
        #charset utf-8;  #koi8-r;
		
        #access_log  logs/host.access.log  main;
		
		#代理配置参数
        proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		client_max_body_size 1024m;
		client_header_buffer_size 16m;
		large_client_header_buffers 4 64m;
		#proxy_connect_timeout 180;
        #proxy_send_timeout 180;
        #proxy_read_timeout 180;
        #proxy_set_header Host $host;
        #proxy_set_header X-Forwarder-For $remote_addr;
		
		#反向代理的路径（和upstream绑定），location 后面设置映射的路径
        #location / {
			#proxy_pass http://static_tl;
        #}
		
		#静态文件，nginx自己处理
        #location ~ ^/(images|javascript|js|css|flash|media|static)/ {
            #root  E:\Program Files\GIS-Server 6\GIS-WebServer\tomcat-8.5.27\webapps;
            #过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。
            #expires 30d;
        #}

        #设定查看Nginx状态的地址
        #location /NginxStatus {
            #stub_status           on;
            #access_log            on;
            #auth_basic            "NginxStatus";
            #auth_basic_user_file  conf/htpasswd;
        #}

        #禁止访问 .htxxx 文件
        #location ~ /\.ht {
            #deny all;
        #}

        #错误处理页面（可选择性配置）
        #error_page   404              /404.html;
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}
		location /santachi/ {
            proxy_pass http://198.120.100.110:1082/santachi/;   
            proxy_connect_timeout 600;
            proxy_read_timeout 600;
        }
		location /gis1/ {
            proxy_pass http://127.0.0.1:8080/; 
            proxy_connect_timeout 600;
            proxy_read_timeout 600;
			proxy_redirect    off;
			proxy_set_header  Host  $host;
			proxy_set_header  X-Real-IP  $remote_addr;
			proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
		location /gis2/ {
            #proxy_pass http://192.168.214.128:8080/; 
			proxy_pass http://127.0.0.1:8080/; 
            proxy_connect_timeout 600;
            proxy_read_timeout 600;
			proxy_redirect    off;
			proxy_set_header  Host  $host;
			proxy_set_header  X-Real-IP  $remote_addr;
			proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
		location /tt/ {
            #proxy_pass http://192.168.214.128:8080/; 
			proxy_pass http://127.0.0.1:8000/; 
            proxy_connect_timeout 600;
            proxy_read_timeout 600;
			proxy_redirect    off;
			proxy_set_header  Host  $host;
			proxy_set_header  X-Real-IP  $remote_addr;
			proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }
		location / {
            proxy_pass http://127.0.0.1:8000;
			set $kas "%7C";
			rewrite ^/http://(.*)[|](.*)[|](.*) http://$1$kas$2$kas$3 break;
            proxy_connect_timeout 600;
            proxy_read_timeout 600;
        }
		#location	/
		#{
		#	proxy_pass	http://server7_pool;
		#	proxy_set_header	Host	$host;
		#}
	}
}
